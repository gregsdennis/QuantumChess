<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:QuantumChess.App.Controls"
	xmlns:model="clr-namespace:QuantumChess.App.Model"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

	<Style TargetType="{x:Type controls:BoardView}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BoardView}">
					<Grid Width="800">
						<Grid.RowDefinitions>
							<RowDefinition Height="800"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ItemsControl ItemsSource="{Binding BoardSpace.Cells, RelativeSource={RelativeSource TemplatedParent}}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<UniformGrid Columns="8" IsItemsHost="True"/>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
						<UniformGrid Grid.Row="1" Columns="3">
							<TextBlock Text="Turn" FontWeight="Bold"
							           HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock Text="Total Board Count" FontWeight="Bold"
							           HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock Text="Distinct Board Count" FontWeight="Bold"
							           HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock Text="{Binding BoardSpace.Turn, RelativeSource={RelativeSource TemplatedParent}}"
							           HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock Text="{Binding BoardSpace.TotalBoardCount, RelativeSource={RelativeSource TemplatedParent}}"
							           HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock Text="{Binding BoardSpace.DistinctBoardCount, RelativeSource={RelativeSource TemplatedParent}}"
							           HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</UniformGrid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate DataType="{x:Type model:QuantumCell}">
		<Grid x:Name="CellRoot">
			<ItemsControl ItemsSource="{Binding Pieces}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Grid IsItemsHost="True"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
			<Border x:Name="SelectionBorder" Opacity=".8" BorderBrush="DeepSkyBlue" BorderThickness="3"/>
			<Border x:Name="Highlight" Opacity=".2" Background="DeepSkyBlue"/>
			<Button Command="{Binding ToggleSelection}" Height="NaN">
				<Button.Template>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="Transparent"/>
					</ControlTemplate>
				</Button.Template>
			</Button>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Color}" Value="Light">
				<Setter TargetName="CellRoot" Property="Background" Value="DarkKhaki"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Color}" Value="Dark">
				<Setter TargetName="CellRoot" Property="Background" Value="Brown"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding IsSelected}" Value="False">
				<Setter TargetName="SelectionBorder" Property="BorderBrush" Value="Transparent"/>
			</DataTrigger>
			<Trigger SourceName="CellRoot" Property="IsMouseOver" Value="False">
				<Setter TargetName="Highlight" Property="Visibility" Value="Collapsed"/>
			</Trigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate DataType="{x:Type model:PieceProbability}">
		<Grid x:Name="PieceRoot"  Opacity="{Binding Probability}">
			<Viewbox Stretch="Uniform" Margin="15">
				<materialDesign:PackIcon x:Name="Image" HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Viewbox>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Pawn">
				<Setter TargetName="Image" Property="Kind" Value="ChessPawn"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Rook">
				<Setter TargetName="Image" Property="Kind" Value="ChessRook"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Knight">
				<Setter TargetName="Image" Property="Kind" Value="ChessKnight"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Bishop">
				<Setter TargetName="Image" Property="Kind" Value="ChessBishop"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Queen">
				<Setter TargetName="Image" Property="Kind" Value="ChessQueen"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="King">
				<Setter TargetName="Image" Property="Kind" Value="ChessKing"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Color}" Value="White">
				<Setter TargetName="Image" Property="Foreground" Value="White"/>
				<Setter TargetName="PieceRoot" Property="RenderTransform">
					<Setter.Value>
						<TranslateTransform X="-5"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Color}" Value="Black">
				<Setter TargetName="Image" Property="Foreground" Value="Black"/>
				<Setter TargetName="PieceRoot" Property="RenderTransform">
					<Setter.Value>
						<TranslateTransform X="5"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

</ResourceDictionary>