<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:QuantumChess.App.Controls"
	xmlns:model="clr-namespace:QuantumChess.App.Model"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:converters="clr-namespace:QuantumChess.App.Converters">

	<Style TargetType="{x:Type controls:BoardView}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BoardView}">
					<Grid Height="800">
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="800"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<ItemsControl ItemsSource="{Binding BoardSpace.Cells, RelativeSource={RelativeSource TemplatedParent}}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<UniformGrid Columns="8" IsItemsHost="True"/>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<CheckBox Content="View Single Board" Margin="2"
							          IsChecked="{Binding BoardSpace.ViewSingleBoard, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Slider Grid.Column="1" Minimum="1" Margin="2"
							        Maximum="{Binding BoardSpace.DistinctBoardCount, RelativeSource={RelativeSource TemplatedParent}}"
							        Value="{Binding BoardSpace.SelectedBoardIndex, RelativeSource={RelativeSource TemplatedParent}}"
							        IsEnabled="{Binding BoardSpace.ViewSingleBoard, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Grid>
						<Grid Grid.Column="1" Grid.RowSpan="2" Grid.IsSharedSizeScope="True">
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ItemsControl>
								<controls:LabeledValue Label="Turn"
								                       Value="{Binding BoardSpace.Turn, RelativeSource={RelativeSource TemplatedParent}}"/>
								<controls:LabeledValue Label="Turns (each player)" Background="LightGray"
								                       Value="{Binding BoardSpace.Turns, RelativeSource={RelativeSource TemplatedParent}}"/>
								<controls:LabeledValue Label="Total Board Count"
								                       Value="{Binding BoardSpace.TotalBoardCount, RelativeSource={RelativeSource TemplatedParent}}"/>
								<controls:LabeledValue Label="Distinct Board Count" Background="LightGray"
								                       Value="{Binding BoardSpace.DistinctBoardCount, RelativeSource={RelativeSource TemplatedParent}}"/>
								<controls:LabeledValue Label="White Kings Captured">
									<controls:LabeledValue.Value>
										<MultiBinding ConverterParameter="{}{0} ({1:P2})" Converter="{x:Static converters:StringFormatter.Instance}">
											<Binding Path="BoardSpace.BlackWinCount" RelativeSource="{RelativeSource TemplatedParent}" />
											<Binding Path="BoardSpace.BlackWinPercent" RelativeSource="{RelativeSource TemplatedParent}" />
										</MultiBinding>
									</controls:LabeledValue.Value>
								</controls:LabeledValue>
								<controls:LabeledValue Label="Black Kings Captured" Background="LightGray">
									<controls:LabeledValue.Value>
										<MultiBinding ConverterParameter="{}{0} ({1:P2})" Converter="{x:Static converters:StringFormatter.Instance}">
											<Binding Path="BoardSpace.WhiteWinCount" RelativeSource="{RelativeSource TemplatedParent}" />
											<Binding Path="BoardSpace.WhiteWinPercent" RelativeSource="{RelativeSource TemplatedParent}" />
										</MultiBinding>
									</controls:LabeledValue.Value>
								</controls:LabeledValue>
								<controls:LabeledValue Label="Boards in Check"
								                       Value="{Binding BoardSpace.BoardsInCheck, RelativeSource={RelativeSource TemplatedParent}}"/>
								<controls:LabeledValue Label="Boards in Check Mate" Background="LightGray"
								                       Value="{Binding BoardSpace.BoardsInCheckMate, RelativeSource={RelativeSource TemplatedParent}}"/>
								<StackPanel Margin="5,2">
									<TextBlock Text="Selected Cell Composition" FontWeight="Bold" Margin="0,2"/>
									<ItemsControl ItemsSource="{Binding BoardSpace.Selected.Pieces, RelativeSource={RelativeSource TemplatedParent}}">
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="{x:Type model:PieceProbability}">
												<controls:LabeledValue Label="{Binding Converter={x:Static converters:PieceProbabilitySummaryConverter.Instance}, ConverterParameter=Name}"
												                       Value="{Binding Converter={x:Static converters:PieceProbabilitySummaryConverter.Instance}, ConverterParameter=Stats}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</StackPanel>
							</ItemsControl>
							<ItemsControl Grid.Row="1" Margin="5">
								<Button x:Name="ReadyButton" Margin="5" Height="NaN"
								        Command="{Binding BoardSpace.ReadyToPlay, RelativeSource={RelativeSource TemplatedParent}}">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition/>
											<RowDefinition/>
										</Grid.RowDefinitions>
										<TextBlock Text="{Binding BoardSpace.ModeText, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center"/>
										<TextBlock Grid.Row="1" Text="{Binding BoardSpace.PlayCommandText, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center"/>
									</Grid>
								</Button>
								<Button Command="{Binding BoardSpace.Reset, RelativeSource={RelativeSource TemplatedParent}}"
								        Content="New Game" Margin="5"/>
							</ItemsControl>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate DataType="{x:Type model:QuantumCell}">
		<Grid x:Name="CellRoot">
			<ItemsControl ItemsSource="{Binding Pieces}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Grid IsItemsHost="True"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
			<Border x:Name="SelectionBorder" Opacity=".8" BorderBrush="DeepSkyBlue" BorderThickness="3"/>
			<Border x:Name="Highlight" Opacity=".2" Background="DeepSkyBlue"/>
			<Button Command="{Binding ToggleSelection}" Height="NaN">
				<Button.Template>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="Transparent"/>
					</ControlTemplate>
				</Button.Template>
			</Button>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Color}" Value="Light">
				<Setter TargetName="CellRoot" Property="Background" Value="DarkKhaki"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Color}" Value="Dark">
				<Setter TargetName="CellRoot" Property="Background" Value="Brown"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding IsSelected}" Value="False">
				<Setter TargetName="SelectionBorder" Property="BorderBrush" Value="Transparent"/>
			</DataTrigger>
			<Trigger SourceName="CellRoot" Property="IsMouseOver" Value="False">
				<Setter TargetName="Highlight" Property="Visibility" Value="Collapsed"/>
			</Trigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate DataType="{x:Type model:PieceProbability}">
		<Grid x:Name="PieceRoot"  Opacity="{Binding Probability}">
			<Viewbox Stretch="Uniform" Margin="15">
				<materialDesign:PackIcon x:Name="Image" HorizontalAlignment="Center" VerticalAlignment="Center"/>
			</Viewbox>
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Pawn">
				<Setter TargetName="Image" Property="Kind" Value="ChessPawn"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Rook">
				<Setter TargetName="Image" Property="Kind" Value="ChessRook"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Knight">
				<Setter TargetName="Image" Property="Kind" Value="ChessKnight"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Bishop">
				<Setter TargetName="Image" Property="Kind" Value="ChessBishop"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="Queen">
				<Setter TargetName="Image" Property="Kind" Value="ChessQueen"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Kind}" Value="King">
				<Setter TargetName="Image" Property="Kind" Value="ChessKing"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Color}" Value="White">
				<Setter TargetName="Image" Property="Foreground" Value="White"/>
				<Setter TargetName="PieceRoot" Property="RenderTransform">
					<Setter.Value>
						<TranslateTransform X="-5"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Piece.Color}" Value="Black">
				<Setter TargetName="Image" Property="Foreground" Value="Black"/>
				<Setter TargetName="PieceRoot" Property="RenderTransform">
					<Setter.Value>
						<TranslateTransform X="5"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

</ResourceDictionary>